{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/predapp/client/src/Predictor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Predictor = () => {\n  _s();\n  const [features, setFeatures] = useState(\"\"); // User input\n  const [prediction, setPrediction] = useState(null); // Prediction result\n\n  const handlePredict = async () => {\n    try {\n      const featureArray = features.split(\",\").map(Number); // Convert input to an array\n      const response = await axios.post(\"http://127.0.0.1:5000/predict\", {\n        features: featureArray\n      });\n      setPrediction(response.data.prediction);\n    } catch (error) {\n      console.error(\"Error fetching prediction:\", error);\n      setPrediction(\"Error making prediction.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Disease Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter features (e.g. 5.1, 3.5, 1.4, 0.2)\",\n      value: features,\n      onChange: e => setFeatures(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePredict,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Predictor, \"1SFf0OH1tMhpxLtreRFfoS5+y3E=\");\n_c = Predictor;\nexport default Predictor;\nvar _c;\n$RefreshReg$(_c, \"Predictor\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Predictor","_s","features","setFeatures","prediction","setPrediction","handlePredict","featureArray","split","map","Number","response","post","data","error","console","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/predapp/client/src/Predictor.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Predictor = () => {\n    const [features, setFeatures] = useState(\"\"); // User input\n    const [prediction, setPrediction] = useState(null); // Prediction result\n\n    const handlePredict = async () => {\n        try {\n            const featureArray = features.split(\",\").map(Number); // Convert input to an array\n            const response = await axios.post(\"http://127.0.0.1:5000/predict\", {\n                features: featureArray,\n            });\n\n            setPrediction(response.data.prediction);\n        } catch (error) {\n            console.error(\"Error fetching prediction:\", error);\n            setPrediction(\"Error making prediction.\");\n        }\n    };\n\n    return (\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n            <h2>Disease Prediction</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Enter features (e.g. 5.1, 3.5, 1.4, 0.2)\"\n                value={features}\n                onChange={(e) => setFeatures(e.target.value)}\n            />\n            <button onClick={handlePredict} style={{ marginLeft: \"10px\" }}>Predict</button>\n            {prediction && <h3>Prediction: {prediction}</h3>}\n        </div>\n    );\n};\n\nexport default Predictor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,YAAY,GAAGL,QAAQ,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC;MACtD,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,+BAA+B,EAAE;QAC/DV,QAAQ,EAAEK;MACd,CAAC,CAAC;MAEFF,aAAa,CAACM,QAAQ,CAACE,IAAI,CAACT,UAAU,CAAC;IAC3C,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDT,aAAa,CAAC,0BAA0B,CAAC;IAC7C;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKiB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjDpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BxB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,0CAA0C;MACtDC,KAAK,EAAExB,QAAS;MAChByB,QAAQ,EAAGC,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFxB,OAAA;MAAQ+B,OAAO,EAAExB,aAAc;MAACU,KAAK,EAAE;QAAEe,UAAU,EAAE;MAAO,CAAE;MAAAZ,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9EnB,UAAU,iBAAIL,OAAA;MAAAoB,QAAA,GAAI,cAAY,EAACf,UAAU;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAACtB,EAAA,CA/BID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}