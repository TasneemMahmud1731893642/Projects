{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/predapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [features, setFeatures] = useState([\"\", \"\", \"\"]); // Example features\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Handle change in feature inputs\n  const handleFeatureChange = (index, value) => {\n    const newFeatures = [...features];\n    newFeatures[index] = value;\n    setFeatures(newFeatures);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Basic validation to ensure all features are filled\n    if (features.some(feature => feature.trim() === \"\")) {\n      setError(\"Please fill in all feature fields.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:4000/predict\", {\n        features: features // Ensure features are passed correctly\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setPrediction(response.data.prediction);\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setError(\"An error occurred while fetching the prediction.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Disease Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Feature \", index + 1, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: feature,\n            onChange: e => handleFeatureChange(index, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Loading...\" : \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Prediction: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ddL7Rd4ETSzU8lWIwHTRZNrVOoQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","features","setFeatures","prediction","setPrediction","loading","setLoading","error","setError","handleFeatureChange","index","value","newFeatures","handleSubmit","e","preventDefault","some","feature","trim","response","post","headers","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","type","onChange","target","disabled","style","color","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/predapp/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [features, setFeatures] = useState([\"\", \"\", \"\"]); // Example features\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Handle change in feature inputs\n  const handleFeatureChange = (index, value) => {\n    const newFeatures = [...features];\n    newFeatures[index] = value;\n    setFeatures(newFeatures);\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Basic validation to ensure all features are filled\n    if (features.some(feature => feature.trim() === \"\")) {\n      setError(\"Please fill in all feature fields.\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:4000/predict\", {\n        features: features, // Ensure features are passed correctly\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      setPrediction(response.data.prediction);\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setError(\"An error occurred while fetching the prediction.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Disease Prediction</h1>\n      \n      <form onSubmit={handleSubmit}>\n        <div>\n          {features.map((feature, index) => (\n            <div key={index}>\n              <label>Feature {index + 1}: </label>\n              <input\n                type=\"text\"\n                value={feature}\n                onChange={(e) => handleFeatureChange(index, e.target.value)}\n              />\n            </div>\n          ))}\n        </div>\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Loading...\" : \"Predict\"}\n        </button>\n      </form>\n\n      {prediction && (\n        <div>\n          <h2>Prediction: {prediction}</h2>\n        </div>\n      )}\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}