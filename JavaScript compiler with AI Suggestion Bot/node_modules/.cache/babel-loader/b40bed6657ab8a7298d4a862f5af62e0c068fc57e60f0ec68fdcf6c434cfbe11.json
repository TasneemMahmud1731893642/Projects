{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/jscompiler/src/App.js\",\n  _s = $RefreshSig$();\n// OnlineJSCompiler.js\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnlineJSCompiler = () => {\n  _s();\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [aiSuggestion, setAiSuggestion] = useState('');\n  const [highlightedCode, setHighlightedCode] = useState('');\n\n  // Function to execute JavaScript code\n  const handleRunCode = () => {\n    try {\n      const consoleLog = [];\n      const customConsole = {\n        log: (...args) => consoleLog.push(args.join(' '))\n      };\n      const result = Function('console', `\"use strict\"; ${code}`)(customConsole);\n      setOutput(consoleLog.join('\\n') || (result === null || result === void 0 ? void 0 : result.toString()) || '');\n    } catch (err) {\n      setOutput(err.toString());\n    }\n  };\n\n  // Function to get AI suggestions directly using OpenAI API\n  const getAiSuggestion = async () => {\n    try {\n      var _data$choices$, _data$choices$$messag;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer YOUR_API_KEY_HERE`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: `Suggest improvements for the following JavaScript code:\\n\\n${code}`\n          }],\n          max_tokens: 150\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      const data = await response.json();\n      const suggestion = ((_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || 'No suggestion available';\n      setAiSuggestion(suggestion);\n      highlightSuggestions(suggestion);\n    } catch (error) {\n      setAiSuggestion(`Error: ${error.message}`);\n    }\n  };\n\n  // Function to highlight suggestions within the code\n  const highlightSuggestions = suggestion => {\n    if (!suggestion) return;\n\n    // Escape special characters for regex matching\n    const escapedSuggestion = suggestion.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    const regex = new RegExp(`(${escapedSuggestion})`, 'gi');\n\n    // Replace the matching part of the code with highlighted span\n    const highlighted = code.replace(regex, '<mark>$1</mark>');\n    setHighlightedCode(highlighted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Online JavaScript Compiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textarea-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"8\",\n          placeholder: \"Write your JavaScript code here...\",\n          value: code,\n          onChange: e => setCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"highlighted-code\",\n          dangerouslySetInnerHTML: {\n            __html: highlightedCode\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRunCode,\n        children: \"Run Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAiSuggestion,\n        children: \"Get AI Suggestion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI Suggestions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"ai-suggestion\",\n          children: aiSuggestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"output\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(OnlineJSCompiler, \"T66qkhK7lGMgJgLQCmN5K26lRPE=\");\n_c = OnlineJSCompiler;\nexport default OnlineJSCompiler;\nvar _c;\n$RefreshReg$(_c, \"OnlineJSCompiler\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","OnlineJSCompiler","_s","code","setCode","output","setOutput","aiSuggestion","setAiSuggestion","highlightedCode","setHighlightedCode","handleRunCode","consoleLog","customConsole","log","args","push","join","result","Function","toString","err","getAiSuggestion","_data$choices$","_data$choices$$messag","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","max_tokens","ok","Error","status","data","json","suggestion","choices","message","highlightSuggestions","error","escapedSuggestion","replace","regex","RegExp","highlighted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","dangerouslySetInnerHTML","__html","onClick","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/jscompiler/src/App.js"],"sourcesContent":["// OnlineJSCompiler.js\nimport { useState, useEffect } from 'react';\nimport './App.css';\n\nconst OnlineJSCompiler = () => {\n    const [code, setCode] = useState('');\n    const [output, setOutput] = useState('');\n    const [aiSuggestion, setAiSuggestion] = useState('');\n    const [highlightedCode, setHighlightedCode] = useState('');\n\n    // Function to execute JavaScript code\n    const handleRunCode = () => {\n        try {\n            const consoleLog = [];\n            const customConsole = {\n                log: (...args) => consoleLog.push(args.join(' ')),\n            };\n            const result = Function('console', `\"use strict\"; ${code}`)(customConsole);\n            setOutput(consoleLog.join('\\n') || result?.toString() || '');\n        } catch (err) {\n            setOutput(err.toString());\n        }\n    };\n\n    // Function to get AI suggestions directly using OpenAI API\n    const getAiSuggestion = async () => {\n        try {\n            const response = await fetch('https://api.openai.com/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer YOUR_API_KEY_HERE`,\n                },\n                body: JSON.stringify({\n                    model: 'gpt-3.5-turbo',\n                    messages: [{ role: 'user', content: `Suggest improvements for the following JavaScript code:\\n\\n${code}` }],\n                    max_tokens: 150,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`API error: ${response.status}`);\n            }\n\n            const data = await response.json();\n            const suggestion = data.choices[0]?.message?.content || 'No suggestion available';\n            setAiSuggestion(suggestion);\n            highlightSuggestions(suggestion);\n        } catch (error) {\n            setAiSuggestion(`Error: ${error.message}`);\n        }\n    };\n\n    // Function to highlight suggestions within the code\n    const highlightSuggestions = (suggestion) => {\n        if (!suggestion) return;\n\n        // Escape special characters for regex matching\n        const escapedSuggestion = suggestion.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const regex = new RegExp(`(${escapedSuggestion})`, 'gi');\n\n        // Replace the matching part of the code with highlighted span\n        const highlighted = code.replace(regex, '<mark>$1</mark>');\n        setHighlightedCode(highlighted);\n    };\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">Online JavaScript Compiler</h1>\n            \n            <div className=\"code-input\">\n                <div className=\"textarea-container\">\n                    <textarea\n                        rows=\"8\"\n                        placeholder=\"Write your JavaScript code here...\"\n                        value={code}\n                        onChange={(e) => setCode(e.target.value)}\n                    />\n                    <div\n                        className=\"highlighted-code\"\n                        dangerouslySetInnerHTML={{ __html: highlightedCode }}\n                    />\n                </div>\n                <button onClick={handleRunCode}>Run Code</button>\n            </div>\n\n            <div className=\"ai-suggestions\">\n                <button onClick={getAiSuggestion}>Get AI Suggestion</button>\n                <div className=\"suggestion-container\">\n                    <h3>AI Suggestions:</h3>\n                    <pre className=\"ai-suggestion\">{aiSuggestion}</pre>\n                </div>\n            </div>\n\n            <div className=\"output-container\">\n                <h2>Output:</h2>\n                <pre className=\"output\">{output}</pre>\n            </div>\n        </div>\n    );\n};\n\nexport default OnlineJSCompiler;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMc,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI;MACA,MAAMC,UAAU,GAAG,EAAE;MACrB,MAAMC,aAAa,GAAG;QAClBC,GAAG,EAAEA,CAAC,GAAGC,IAAI,KAAKH,UAAU,CAACI,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC,GAAG,CAAC;MACpD,CAAC;MACD,MAAMC,MAAM,GAAGC,QAAQ,CAAC,SAAS,EAAE,iBAAiBhB,IAAI,EAAE,CAAC,CAACU,aAAa,CAAC;MAC1EP,SAAS,CAACM,UAAU,CAACK,IAAI,CAAC,IAAI,CAAC,KAAIC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,QAAQ,CAAC,CAAC,KAAI,EAAE,CAAC;IAChE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVf,SAAS,CAACe,GAAG,CAACD,QAAQ,CAAC,CAAC,CAAC;IAC7B;EACJ,CAAC;;EAED;EACA,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MAAA,IAAAC,cAAA,EAAAC,qBAAA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE;QACrB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAE,eAAe;UACtBC,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAE,8DAA8DhC,IAAI;UAAG,CAAC,CAAC;UAC3GiC,UAAU,EAAE;QAChB,CAAC;MACL,CAAC,CAAC;MAEF,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,cAAcb,QAAQ,CAACc,MAAM,EAAE,CAAC;MACpD;MAEA,MAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAG,EAAAnB,cAAA,GAAAiB,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,cAAApB,cAAA,wBAAAC,qBAAA,GAAfD,cAAA,CAAiBqB,OAAO,cAAApB,qBAAA,uBAAxBA,qBAAA,CAA0BW,OAAO,KAAI,yBAAyB;MACjF3B,eAAe,CAACkC,UAAU,CAAC;MAC3BG,oBAAoB,CAACH,UAAU,CAAC;IACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZtC,eAAe,CAAC,UAAUsC,KAAK,CAACF,OAAO,EAAE,CAAC;IAC9C;EACJ,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAIH,UAAU,IAAK;IACzC,IAAI,CAACA,UAAU,EAAE;;IAEjB;IACA,MAAMK,iBAAiB,GAAGL,UAAU,CAACM,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;IAC3E,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAC,IAAIH,iBAAiB,GAAG,EAAE,IAAI,CAAC;;IAExD;IACA,MAAMI,WAAW,GAAGhD,IAAI,CAAC6C,OAAO,CAACC,KAAK,EAAE,iBAAiB,CAAC;IAC1DvC,kBAAkB,CAACyC,WAAW,CAAC;EACnC,CAAC;EAED,oBACInD,OAAA;IAAKoD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBrD,OAAA;MAAIoD,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErDzD,OAAA;MAAKoD,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBrD,OAAA;QAAKoD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAC/BrD,OAAA;UACI0D,IAAI,EAAC,GAAG;UACRC,WAAW,EAAC,oCAAoC;UAChDC,KAAK,EAAEzD,IAAK;UACZ0D,QAAQ,EAAGC,CAAC,IAAK1D,OAAO,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACFzD,OAAA;UACIoD,SAAS,EAAC,kBAAkB;UAC5BY,uBAAuB,EAAE;YAAEC,MAAM,EAAExD;UAAgB;QAAE;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNzD,OAAA;QAAQkE,OAAO,EAAEvD,aAAc;QAAA0C,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAENzD,OAAA;MAAKoD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BrD,OAAA;QAAQkE,OAAO,EAAE5C,eAAgB;QAAA+B,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5DzD,OAAA;QAAKoD,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACjCrD,OAAA;UAAAqD,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBzD,OAAA;UAAKoD,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE9C;QAAY;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENzD,OAAA;MAAKoD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BrD,OAAA;QAAAqD,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBzD,OAAA;QAAKoD,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAEhD;MAAM;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvD,EAAA,CAhGID,gBAAgB;AAAAkE,EAAA,GAAhBlE,gBAAgB;AAkGtB,eAAeA,gBAAgB;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}