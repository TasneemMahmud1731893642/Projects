{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/jscompiler/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnlineJSCompiler = () => {\n  _s();\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [aiSuggestion, setAiSuggestion] = useState('');\n  const handleRunCode = () => {\n    console.log('Run Code button clicked');\n    try {\n      const consoleLog = [];\n      const customConsole = {\n        log: (...args) => consoleLog.push(args.join(' '))\n      };\n      const result = Function('console', `\"use strict\"; ${code}`)(customConsole);\n      setOutput(consoleLog.join('\\n') || (result === null || result === void 0 ? void 0 : result.toString()) || '');\n    } catch (err) {\n      console.error('Error:', err);\n      setOutput(err.toString());\n    }\n  };\n  const getAiSuggestion = async () => {\n    try {\n      var _data$choices$;\n      const response = await fetch('YOUR_API_URL_HERE', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer YOUR_API_KEY` // Ensure you have the correct API key\n        },\n        body: JSON.stringify({\n          code: code\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('API Response:', data); // Log the full response to understand its structure\n\n      // Modify this based on the actual structure of the response\n      setAiSuggestion(data.choices ? (_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : _data$choices$.text : 'No suggestion available');\n    } catch (error) {\n      console.error('Error fetching AI suggestion:', error);\n      setAiSuggestion(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Online JavaScript Compiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"8\",\n        placeholder: \"Write your JavaScript code here...\",\n        value: code,\n        onChange: e => setCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRunCode,\n        children: \"Run Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAiSuggestion,\n        children: \"Get AI Suggestion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI Suggestions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"ai-suggestion\",\n          children: aiSuggestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"output\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(OnlineJSCompiler, \"jPICn1IoebrmkdisoHQtkz8JBQI=\");\n_c = OnlineJSCompiler;\nexport default OnlineJSCompiler;\nvar _c;\n$RefreshReg$(_c, \"OnlineJSCompiler\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","OnlineJSCompiler","_s","code","setCode","output","setOutput","aiSuggestion","setAiSuggestion","handleRunCode","console","log","consoleLog","customConsole","args","push","join","result","Function","toString","err","error","getAiSuggestion","_data$choices$","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","choices","text","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/jscompiler/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst OnlineJSCompiler = () => {\n    const [code, setCode] = useState('');\n    const [output, setOutput] = useState('');\n    const [aiSuggestion, setAiSuggestion] = useState('');\n\n    const handleRunCode = () => {\n        console.log('Run Code button clicked');\n        try {\n            const consoleLog = [];\n            const customConsole = {\n                log: (...args) => consoleLog.push(args.join(' '))\n            };\n            const result = Function('console', `\"use strict\"; ${code}`)(customConsole);\n            setOutput(consoleLog.join('\\n') || result?.toString() || '');\n        } catch (err) {\n            console.error('Error:', err);\n            setOutput(err.toString());\n        }\n    };\n\n    const getAiSuggestion = async () => {\n      try {\n          const response = await fetch('YOUR_API_URL_HERE', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer YOUR_API_KEY`  // Ensure you have the correct API key\n              },\n              body: JSON.stringify({ code: code })\n          });\n  \n          if (!response.ok) {\n              throw new Error(`API error: ${response.status}`);\n          }\n  \n          const data = await response.json();\n          console.log('API Response:', data);  // Log the full response to understand its structure\n  \n          // Modify this based on the actual structure of the response\n          setAiSuggestion(data.choices ? data.choices[0]?.text : 'No suggestion available');\n      } catch (error) {\n          console.error('Error fetching AI suggestion:', error);\n          setAiSuggestion(`Error: ${error.message}`);\n      }\n  };\n  \n  \n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">Online JavaScript Compiler</h1>\n            <div className=\"code-input\">\n                <textarea\n                    rows=\"8\"\n                    placeholder=\"Write your JavaScript code here...\"\n                    value={code}\n                    onChange={(e) => setCode(e.target.value)}\n                ></textarea>\n                <button onClick={handleRunCode}>Run Code</button>\n            </div>\n            <div className=\"ai-suggestions\">\n                <button onClick={getAiSuggestion}>Get AI Suggestion</button>\n                <div className=\"suggestion-container\">\n                    <h3>AI Suggestions:</h3>\n                    <pre className=\"ai-suggestion\">{aiSuggestion}</pre>\n                </div>\n            </div>\n            <div className=\"output-container\">\n                <h2>Output:</h2>\n                <pre className=\"output\">{output}</pre>\n            </div>\n        </div>\n    );\n};\n\nexport default OnlineJSCompiler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}