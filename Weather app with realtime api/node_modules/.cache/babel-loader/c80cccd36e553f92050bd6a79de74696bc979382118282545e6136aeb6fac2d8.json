{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/weatherapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import the App.css file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const apiKey = '6f61490d974e4abb987121740250103'; // Replace with your WeatherAPI key\n  const apiUrl = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${encodeURIComponent(city)}&aqi=no`;\n  const fetchWeather = async () => {\n    if (city.trim() === '') return; // Don't make request if city is empty\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(apiUrl);\n      console.log(response.data); // Log the API response for debugging\n      setWeatherData(response.data);\n    } catch (err) {\n      console.error(err); // Log the error for debugging\n      setError('City not found or API request failed');\n    }\n    setLoading(false);\n  };\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n  useEffect(() => {\n    if (city) {\n      fetchWeather();\n    }\n  }, [city]);\n\n  // Get the weather icon URL based on condition\n  const getWeatherIcon = condition => {\n    switch (condition.toLowerCase()) {\n      case 'sunny':\n        return 'https://cdn.weatherapi.com/weather/64x64/day/113.png';\n      case 'cloudy':\n        return 'https://cdn.weatherapi.com/weather/64x64/day/119.png';\n      case 'rain':\n      case 'drizzle':\n        return 'https://cdn.weatherapi.com/weather/64x64/day/302.png';\n      case 'snow':\n        return 'https://cdn.weatherapi.com/weather/64x64/day/332.png';\n      default:\n        return 'https://cdn.weatherapi.com/weather/64x64/day/113.png';\n      // Default to sunny\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: handleCityChange,\n      placeholder: \"Enter city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.location.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getWeatherIcon(weatherData.current.condition.text),\n          alt: \"weather icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"weather-info\",\n        children: [\"Temperature: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"value\",\n          children: [weatherData.current.temp_c, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"weather-info\",\n        children: [\"Weather: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"value\",\n          children: weatherData.current.condition.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"weather-info\",\n        children: [\"Humidity: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"value\",\n          children: [weatherData.current.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"weather-info\",\n        children: [\"Wind Speed: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"value\",\n          children: [weatherData.current.wind_kph, \" kph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h/TqfUgL2vGamjwPP2Xu+fET93Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","city","setCity","weatherData","setWeatherData","loading","setLoading","error","setError","apiKey","apiUrl","encodeURIComponent","fetchWeather","trim","response","get","console","log","data","err","handleCityChange","event","target","value","getWeatherIcon","condition","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","style","color","location","name","src","current","text","alt","temp_c","humidity","wind_kph","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/weatherapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';  // Import the App.css file\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const apiKey = '6f61490d974e4abb987121740250103'; // Replace with your WeatherAPI key\n  const apiUrl = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${encodeURIComponent(city)}&aqi=no`;\n\n  const fetchWeather = async () => {\n    if (city.trim() === '') return;  // Don't make request if city is empty\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(apiUrl);\n      console.log(response.data);  // Log the API response for debugging\n      setWeatherData(response.data);\n    } catch (err) {\n      console.error(err);  // Log the error for debugging\n      setError('City not found or API request failed');\n    }\n    setLoading(false);\n  };\n\n  const handleCityChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  useEffect(() => {\n    if (city) {\n      fetchWeather();\n    }\n  }, [city]);\n\n  // Get the weather icon URL based on condition\n  const getWeatherIcon = (condition) => {\n    switch (condition.toLowerCase()) {\n      case 'sunny':\n        return 'https://cdn.weatherapi.com/weather/64x64/day/113.png';\n      case 'cloudy':\n        return 'https://cdn.weatherapi.com/weather/64x64/day/119.png';\n      case 'rain':\n      case 'drizzle':\n        return 'https://cdn.weatherapi.com/weather/64x64/day/302.png';\n      case 'snow':\n        return 'https://cdn.weatherapi.com/weather/64x64/day/332.png';\n      default:\n        return 'https://cdn.weatherapi.com/weather/64x64/day/113.png'; // Default to sunny\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Weather App</h1>\n      <input\n        type=\"text\"\n        value={city}\n        onChange={handleCityChange}\n        placeholder=\"Enter city\"\n      />\n      <button onClick={fetchWeather}>Get Weather</button>\n      \n      {loading && <p className=\"loading\">Loading...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      \n      {weatherData && (\n        <div>\n          <h2>{weatherData.location.name}</h2>\n          <div className=\"weather-icon\">\n            <img src={getWeatherIcon(weatherData.current.condition.text)} alt=\"weather icon\" />\n          </div>\n          <p className=\"weather-info\">\n            Temperature: <span className=\"value\">{weatherData.current.temp_c}Â°C</span>\n          </p>\n          <p className=\"weather-info\">\n            Weather: <span className=\"value\">{weatherData.current.condition.text}</span>\n          </p>\n          <p className=\"weather-info\">\n            Humidity: <span className=\"value\">{weatherData.current.humidity}%</span>\n          </p>\n          <p className=\"weather-info\">\n            Wind Speed: <span className=\"value\">{weatherData.current.wind_kph} kph</span>\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}